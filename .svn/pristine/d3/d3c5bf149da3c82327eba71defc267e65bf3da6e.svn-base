<template>
  <div class="wx-login">
    <div class="login">
      <div class="logo">
        <i class="logo-icon"></i>
      </div>
      <div class="lang">
        <a  target="_blank"
            class="ng-scope">{{webName}}PC版</a>
        <!-- <span class="sep ng-scope"></span>
        <a class="lang-item" >中文</a>
         <span class="sep"></span>
        <a class="lang-item" >繁体</a>
        <span class="sep"></span>
        <a class="lang-item" >English</a> -->
      </div>
      <!-- <div class="copyright">
        <p class="desc">© 1998 - 2019 abc Inc. All Rights Reserved</p>
      </div> -->
      <div class="login_box">

        <div class="nav_login_zd">
          <div class="login_nav">
            <div class="grid-content bg-purple"><a href="#/login">登录</a></div>
          </div>
          <div class="login_nav active-on">
            <div class="grid-content bg-purple-light">注册</div>
          </div>
        </div>


        <el-form :label-position="labelPosition"  :model="registerForm" status-icon ref="registerForm"  class="demo-ruleForm">

          <el-form-item label="" v-for="i in indexStore.getParams.data" v-if="i.name=='codec'">
            <div class="icon"><i class="iconfont icon-nicheng"></i></div>
            <el-input v-model="registerForm.codec" :name="i.name" :ifrequired="i.required" :placeholder="i.tips" :data-title="i.label">
            </el-input>
          </el-form-item>
          <el-form-item label="" v-for="i in indexStore.getParams.data" v-if="i.name!='vcode' && i.name !='codec'">
            <div class="icon"><i class="iconfont icon-nicheng"></i></div>
            <el-input :type="i.name=='password' || i.name=='cpasswd' || i.name=='coinPassword'  ? 'password' : ''" :name="i.name" :ifrequired="i.required" :placeholder="i.tips" :data-title="i.label" class="labelInput">
            </el-input>
          </el-form-item>

          <el-form-item>
            <button type="button" class="submitLogin" @click="submitForm()">注册</button>
          </el-form-item>
        </el-form>
      </div>

    </div>
  </div>
</template>
<script>
  import {mapState, mapMutations, mapActions} from 'vuex';
  import { setSession2,getSession2} from '../common/common'
  import {Message} from 'element-ui'
  export default {
    name: 'login',
    data () {
      return {
        isLogin:'',
        registerForm:{
          codec: '',
          loginFrom:'1'
        },
        labelPosition: 'top',
        webName:'',
      }
    },
    mounted(){

    },
    beforeDestroy(){
      document.onkeydown=null;
    },
    created() {
      this.webName = window.webName

      var _this = this;
      document.onkeydown=null;
      document.onkeydown = function(e) {
        if(window.event == undefined){
          var key = e.keyCode;
        }else{
          var key = window.event.keyCode;
        }
        if(key == 13){
          _this.submitForm()
        }
      }
      this.setIsFirstLogin(false)
      this.getParamsAction();
      if(this.$route.params.id){
        this.registerForm.codec=this.$route.params.id
      }


    },
    watch:{
    },
    methods: {
      ...mapMutations([
        "setIsFirstLogin"
      ]),
      ...mapActions([
        'loginAction',
        'registerAction',
        'resetPassAction',
        "getParamsAction"
      ]),
      ifCodec(){
        let arr = this.indexStore.getParams.data
        for(let a = 0; a < arr.length; a++){
          if(arr[a].required == 1 && arr[a].name  == 'codec'){
            return true;
          }else{
            return false;
          }
        }
      },
      submitForm() { //提交
        let pwdreg = /^[a-zA-Z0-9]{6,22}$/;
        let userreg = /^[a-zA-Z0-9]{3,16}$/;
        let coinpwd = /^[0-9]{6,22}$/;
        var temstat=false;

        //  动态生成的注册字段
        let inputAll = document.querySelectorAll(".demo-ruleForm .labelInput");
        for (let i = 0; i < inputAll.length; i++) {
          let required = inputAll[i].getElementsByTagName("input")[0].getAttribute('ifrequired');
          let val = inputAll[i].getElementsByTagName("input")[0].value;
          let title = inputAll[i].getElementsByTagName("input")[0].getAttribute('data-title');
          if(required == 1){
            if(val=="" || val.replace(/(^s*)|(s*$)/g, "").length ==0){
              Message({
                message: '请填写' + title
              });
              temstat=true;
              break;
            }
          }
        }
        if(temstat){ return}

        for (let i = 0; i < inputAll.length; i++) {
          let name = inputAll[i].getElementsByTagName("input")[0].getAttribute('name')
          let values = inputAll[i].getElementsByTagName("input")[0].value;
          this.registerForm[name] = values
        }

        if (this.registerForm.codec == '' && this.ifCodec()){
          Message({
            message: '请输入推荐码'
          });
          return;
        }
        if (!userreg.test(this.registerForm.username)){
          Message({
            message: '请输入3-16位用户名，字母或数字组成'
          });
          return;
        }
        if (!pwdreg.test(this.registerForm.password)){
          Message({
            message: '请输入6-22位密码，字母或数字组成'
          });
          return;
        }
        if (this.registerForm.coinPassword && !coinpwd.test(this.registerForm.coinPassword)){
          Message({
            message: '请输入6-22位提款密码，只能数字组成'
          });
          return;
        }
        if(this.registerForm.cpasswd && this.registerForm.password != this.registerForm.cpasswd){
          Message({
            message: '两次密码不一致'
          });
          return;
        }

        if(this.$route.params.id){
          this.registerForm.codec=this.$route.params.id || this.registerForm.codec;
        }
        this.registerAction({data:this.registerForm,router:this.$router})
      },
    },
    components: {

    },
    computed: {
      ...mapState([
        'chatuserInfoStore',
        "indexStore"
      ]),
    },
    filters: {}
  }
</script>

<!-- Add "scoped" attribute to limit CSS to this component only -->
<style lang="less" scoped>
  .wx-login {
    width: 100%;
    height: 100%;
    background: url('../assets/weChat/login_bg.jpg') no-repeat 50%;
    background-size: cover;

  .login {
    height: 100%;
    min-width: 860px;
    min-height: 700px;
    overflow: auto;
    position: relative;

  .logo {
    position: absolute;
    left: 60px;
    top: 60px;

  .logo-icon {
    display: inline-block;
    vertical-align: middle;
    width: 80px;
    height: 80px;
    /*澳博logo*/
    background: url('../assets/weChat/logo.png') no-repeat;
    /*赢胜logo*/
    /*background: url('../assets/weChat/IMG_0022.png') no-repeat;*/
    background-size: 100% 100%;
    border-radius: 10px;
  }
  }
  .lang {
    position: absolute;
    left: 60px;
    bottom: 60px;
  a{
    text-decoration: none;
    font-size: 12px;
    color: #d3d3d3;
  }
  .sep {
    display: inline-block;
    height: 12px;
    vertical-align: middle;
    margin: 0 10px;
    border-right: 1px solid #d3d3d3;
  }
  }
  .copyright {
    position: absolute;
    bottom: 60px;
    right: 60px;
    color: #d3d3d3;
    font-size: 12px;
  }
  .login_box {
    position: absolute;
    top: 50%;
    left: 50%;
    padding: 15px;
    margin-left: -190px;
    margin-top: -270px;
    border-radius: 4px;
    -moz-border-radius: 4px;
    -webkit-border-radius: 4px;
    /*background-color: #fff;*/
    width: 380px;
    height: 540px;
  /*box-shadow: 0 2px 10px #999;*/
  /*-moz-box-shadow: #999 0 2px 10px;*/
  /*-webkit-box-shadow: #999 0 2px 10px;*/
  .nav{
    line-height: 40px;
    text-align: center;
    font-size: 16px;
    color: #d3d3d3;
    cursor: pointer;
  .el-col{
    background: #666666;
  &.on{
     background: #333333;
     color: #fff;
   }
  }
  }
  .el-form-item{
    display: flex;
    justify-content: space-between;
  .el-select{
    width: 100%;
  }
  }
  }

  }
  }
  .nav_login_zd{
    width: 100%;
    line-height: 40px;
    text-align: center;
    font-size: 16px;
    color: #d3d3d3;
    cursor: pointer;
    display: flex;
  .login_nav{
    width: 100%;
    background: #666666;
    color: #d3d3d3;
    a {
      display: block;
    }
  }
  .active-on{
    color: #fff;
    background: #333333;
  }
  }
</style>
